// <auto-generated />
using System;
using Backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Backend.Migrations
{
    [DbContext(typeof(ApotekaContext))]
    partial class ApotekaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Backend.Models.Apoteka", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Adresa");

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Naziv");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Opis");

                    b.HasKey("ID");

                    b.ToTable("Apoteka");
                });

            modelBuilder.Entity("Backend.Models.Lek", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApotekaID")
                        .HasColumnType("int");

                    b.Property<double>("Cena")
                        .HasColumnType("float")
                        .HasColumnName("Cena");

                    b.Property<string>("Opis")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Opis");

                    b.Property<int?>("ReceptID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ApotekaID");

                    b.HasIndex("ReceptID");

                    b.ToTable("Lek");
                });

            modelBuilder.Entity("Backend.Models.Recept", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApotekaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumDo")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatumDo");

                    b.Property<DateTime>("DatumOd")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatumOd");

                    b.HasKey("ID");

                    b.HasIndex("ApotekaID");

                    b.ToTable("Recept");
                });

            modelBuilder.Entity("Backend.Models.Lek", b =>
                {
                    b.HasOne("Backend.Models.Apoteka", "Apoteka")
                        .WithMany("Lekovi")
                        .HasForeignKey("ApotekaID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Backend.Models.Recept", "Recept")
                        .WithMany("Lekovi")
                        .HasForeignKey("ReceptID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Apoteka");

                    b.Navigation("Recept");
                });

            modelBuilder.Entity("Backend.Models.Recept", b =>
                {
                    b.HasOne("Backend.Models.Apoteka", "Apoteka")
                        .WithMany("Recepti")
                        .HasForeignKey("ApotekaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Apoteka");
                });

            modelBuilder.Entity("Backend.Models.Apoteka", b =>
                {
                    b.Navigation("Lekovi");

                    b.Navigation("Recepti");
                });

            modelBuilder.Entity("Backend.Models.Recept", b =>
                {
                    b.Navigation("Lekovi");
                });
#pragma warning restore 612, 618
        }
    }
}
